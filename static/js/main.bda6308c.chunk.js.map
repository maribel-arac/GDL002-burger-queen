{"version":3,"sources":["components/navbar.js","components/home.js","Firebase/initializeFirebase.js","components/counter.js","components/menu.js","components/combos.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","react_default","a","createElement","class","href","name","react_router_dom","className","exact","to","Home","title","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Counter","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleIncrement","setState","count","state","handleDecrement","onClick","Component","ShowMenuWithFb","Menu","Paquetes","Ordenes","_this2","database","ref","on","snapshot","menus1","val","newStateMenu","menu2","push","id","image","item","speciality","amount","price","map","menuDetail","src","alt","quantity","type","value","for","counter","ShowCombos","combosDetail","index","key","App","navbar","react_router","path","render","home","components_menu","combos","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bda6308c.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nconst Navbar = (props) => (\n\n\t<nav>\n\t\t<h2 class=\"logo\"><a class=\"logo-link\" href=\"#\">{props.name}</a></h2>\n\t\t<ul class=\"nav-menu\">\n\t\t\t<li> <NavLink className=\"nav-menu__link\" exact to=\"/\">Inicio</NavLink></li>\n\t\t\t<li> <NavLink className=\"nav-menu__link\" to=\"/menu\">Men√∫</NavLink></li>\n\t\t\t<li> <NavLink className=\"nav-menu__link\" to=\"/combos\">Paquetes</NavLink></li>\n\t\t</ul>\n\t</nav>\n);\n\n\nexport default Navbar;","import React from 'react';\n\nconst Home = (props) => (\n\t<div className=\"main-content\"> \n\t\t<div className= \"container\">\n\t\t\t<h2>{props.title}</h2>\n\t\t\t<div className= \"home-img\"></div>\n\t\t\t\t<div className =\"thumbnail-container\">\n\t\t\t\t\t<div className= \"home-thumbnail-1\"></div>\n\t\t\t\t\t<div className= \"home-thumbnail-2\"></div>\n\t\t\t\t\t<div className= \"home-thumbnail-3\"></div>\n\t\t\t\t</div>\n\t\t</div> \n\t</div>\n\n);\n\nexport default Home;","import * as firebase from 'firebase';\n\n  // Your web app's Firebase configuration\n  const firebaseConfig = {\n    apiKey: \"AIzaSyB8C4Lu3hT4eEKHLzZbpM_og0TBy-iqNMs\",\n    authDomain: \"burgerqueen-a9a26.firebaseapp.com\",\n    databaseURL: \"https://burgerqueen-a9a26.firebaseio.com\",\n    projectId: \"burgerqueen-a9a26\",\n    storageBucket: \"burgerqueen-a9a26.appspot.com\",\n    messagingSenderId: \"571621356302\",\n    appId: \"1:571621356302:web:0d87a6481a4aef04\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\nexport default firebase;","import React, { Component } from 'react';\n\nclass Counter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            count: 0\n        };\n    };\n\n    handleIncrement = () => {\n        this.setState({\n            count: this.state.count + 1\n        });\n    };\n\n    handleDecrement = () => {\n        this.setState({\n            count: this.state.count - 1\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"center\">\n                <p>{this.state.count}</p>\n                <button className= \"btn btn-primary\" onClick={this.handleIncrement}>+</button>\n                <button className= \"btn btn-primary\" onClick={this.handleDecrement}>-</button>\n            </div>\n        );\n    };\n};\n\nexport default Counter;","import React, {Component} from 'react';\nimport firebase from '../Firebase/initializeFirebase';\nimport Menu from '../data/menu.json';\nimport Counter from '../components/counter';\n\nclass ShowMenuWithFb extends Component {\n  constructor () {\n    super()\n    this.state = {\n      Menu: [],\n      Paquetes: [],\n      Ordenes: []\n    };\n  };\n\n  componentDidMount() {\n    const MenuRef = firebase.database().ref('Menu');\n    MenuRef.on('value', (snapshot) => {\n      let menus1 = snapshot.val();\n      let newStateMenu = [];\n      for (let menu2 in menus1){\n        newStateMenu.push({\n          id: menu2,\n          image: menus1[menu2].image,\n          item: menus1[menu2].item,\n          speciality: menus1[menu2].speciality,\n          amount: menus1[menu2].amount,\n          price: menus1[menu2].price\n        });\n      }\n      this.setState({\n        Menu: newStateMenu\n      });\n    });\n  }\n\nrender(){\n  return(\n\n  <div className=\"row\">\n        <div className=\"col-sm-4\">\n            {this.state.Menu.map((menuDetail)=> //en map va el nombre del import de json\n            <div className=\"card\"> \n              <div className=\"card-body\">\n              <img src={menuDetail.image} className=\"card-img-top\" alt=\"\" />\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{menuDetail.item}</h5>\n                <p className=\"card-text\"><ul>\n\n                  \n                {menuDetail.amount.map((quantity, price) =>\n                    <div>\n                      <div className=\"form-check\">    \n                    </div>\n                        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\"/>\n                        <label className=\"form-check-label\" for=\"defaultCheck1\"> <li> { quantity + \" \" +\"$\" +menuDetail.price[price]}</li></label>\n                    </div>\n                  )}\n                  </ul></p>\n\n                <Counter/>\n              </div>\n            </div>\n            </div>\n            )}\n        </div>\n  </div>\n    );\n}\n\n}\n\nexport default ShowMenuWithFb;\n\n// const ShowMenu = props => {\n//     return(\n//       <div className=\"row\">\n//         <div className=\"col-sm-4\">\n//             {Menu.map((menuDetail, index)=> //en map va el nombre del import de json\n//             <div className=\"card\" key={index}> \n//               <div className=\"card-body\">\n//               <img src={menuDetail.image} className=\"card-img-top\" alt=\"\" />\n//               <div className=\"card-body\">\n//                 <h5 className=\"card-title\">{menuDetail.item}</h5>\n//                 <p className=\"card-text\"><ul>{menuDetail.price.map((price) => \n\n//                   <div class=\"form-check\">\n//                   {\"$\" + price}\n//                   </div>\n//                   )}\n//                 {menuDetail.amount.map((quantity) =>\n//                     <div>\n//                         <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\"/>\n//                         <label class=\"form-check-label\" for=\"defaultCheck1\"> <li> {quantity}</li></label>\n//                     </div>\n//                   )}\n//                   </ul></p>\n\n//                 <button href=\"#\" className=\"btn btn-primary\"> Add +</button>\n//               </div>\n//             </div>\n//             </div>\n//             )}\n//         </div>\n//         </div>\n//   )\n// }\n\n// export default ShowMenu;","import React from 'react';\nimport Paquetes from '../data/paquetes.json';\n\nconst ShowCombos = props => {\n    return(\n      <div className=\"row\">\n        <div className=\"col-sm-4\">\n            {Paquetes.map((combosDetail, index)=> //en map va el nombre del json\n            <div className=\"card\" key={index}> \n              <div className=\"card-body\">\n              <img src={combosDetail.image} className=\"card-img-top\" alt=\"\" />\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{combosDetail.item}</h5>\n                <p className=\"card-text\">$ {combosDetail.price}</p>\n                <button href=\"#\" className=\"btn btn-primary\"> Add +</button>\n              </div>\n            </div>\n            </div>\n            )}\n        </div>\n        </div>\n  )\n}\n\nexport default ShowCombos;","import React from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport './css/style.css';\nimport Navbar from './components/navbar';\nimport Home from './components/home';\nimport ShowMenu from './components/menu';\nimport ShowCombos from './components/combos';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar name=\"Mariscos Selectos Perico\" /> \n        {/* <Route to=\"/\" component={Home}/>*/}\n        <Route exact path=\"/\" render={() => <Home title=\"Platillos\" />} />\n        <Route path=\"/menu\" render={() => <ShowMenu />} /> \n       <Route path=\"/combos\" render={() => <ShowCombos />} />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}