{"version":3,"sources":["components/navbar.js","components/home.js","Firebase/initializeFirebase.js","components/orders.js","components/menu.js","components/orderCombos.js","components/combos.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","react_default","a","createElement","class","href","name","react_router_dom","className","exact","to","Home","title","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Order","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","deleteItem","e","i","handleDelete","inherits","createClass","key","value","_this2","menuOrder","map","menu","item","amount","price","id","onClick","event","React","Component","ShowMenuWithFb","state","paquetes","ordenes","total","submit","bind","assertThisInitialized","deleteLine","sumTotalOrder","cost","orderMenu","setState","toConsumableArray","database","ref","on","snapshot","menus1","val","newStateMenu","menu2","push","image","speciality","items","el","reduce","sum","result","preventDefault","prevState","filter","element","_this3","menuDetail","src","alt","quantity","index","type","components_orders","OrderCombos","console","log","combo","combosDetail","orderCombos","App","navbar","react_router","path","render","home","component","ShowMenu","combos","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d0e17215.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nconst Navbar = (props) => (\n\n\t<nav>\n\t\t<h2 class=\"logo\"><a class=\"logo-link\" href=\"#\">{props.name}</a></h2>\n\t\t<ul class=\"nav-menu\">\n\t\t\t<li> <NavLink className=\"nav-menu__link\" exact to=\"/\">Inicio</NavLink></li>\n\t\t\t<li> <NavLink className=\"nav-menu__link\" to=\"/menu\">Men√∫</NavLink></li>\n\t\t\t<li> <NavLink className=\"nav-menu__link\" to=\"/combos\">Paquetes</NavLink></li>\n\t\t</ul>\n\t</nav>\n);\n\n\nexport default Navbar;","import React from 'react';\n\nconst Home = (props) => (\n\t<div className=\"main-content\"> \n\t\t<div className= \"container\">\n\t\t\t<h2>{props.title}</h2>\n\t\t\t<div className= \"home-img\"></div>\n\t\t\t\t<div className =\"thumbnail-container\">\n\t\t\t\t\t<div className= \"home-thumbnail-1\"></div>\n\t\t\t\t\t<div className= \"home-thumbnail-2\"></div>\n\t\t\t\t\t<div className= \"home-thumbnail-3\"></div>\n\t\t\t\t</div>\n\t\t</div> \n\t</div>\n\n);\n\nexport default Home;","import * as firebase from 'firebase';\n\n  // Your web app's Firebase configuration\n  const firebaseConfig = {\n    apiKey: \"AIzaSyB8C4Lu3hT4eEKHLzZbpM_og0TBy-iqNMs\",\n    authDomain: \"burgerqueen-a9a26.firebaseapp.com\",\n    databaseURL: \"https://burgerqueen-a9a26.firebaseio.com\",\n    projectId: \"burgerqueen-a9a26\",\n    storageBucket: \"burgerqueen-a9a26.appspot.com\",\n    messagingSenderId: \"571621356302\",\n    appId: \"1:571621356302:web:0d87a6481a4aef04\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\nexport default firebase;","import React from \"react\";\n\nexport class Order extends React.Component {\n\n    deleteItem = (e, i) => {\n        this.props.handleDelete(e, i)\n    }\n\n    render(){\n        const orders = this.props.menuOrder.map((menu, i) => {\n            return(\n                <div>\n                    <ul key={i} className=\"list-group col-md-12\">\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center col-md-12\">\n                            <p> {menu.item + \" \"+ menu.amount}</p>\n                            <span className=\"btn btn-success\">{\"$\"+ menu.price}</span>\n                            <button id={i} onClick={(event)=> this.deleteItem(event, menu)}><i className=\" btn btn-danger fas fa-trash-alt\"></i></button>\n                        </li>\n                    </ul>\n                </div>\n            )\n        })\n        return(\n            orders\n        )\n    }\n}\n\nexport default Order;","import React, { Component } from \"react\";\nimport firebase from \"../Firebase/initializeFirebase\";\n// import Menu from \"../data/menu.json\";\nimport Order from \"../components/orders\";\n\nclass ShowMenuWithFb extends Component {\n  constructor() {\n    super();\n    this.state = {\n      menu: [],\n      paquetes: [],\n      ordenes: [],\n      total: 0\n    };\n\n    this.submit = this.submit.bind(this);\n    this.deleteLine = this.deleteLine.bind(this);\n    this.sumTotalOrder = this.sumTotalOrder.bind(this)\n  }\n\n  submit(item, amount, cost){ //muestra la comanda\n    const orderMenu ={\n      item: item,\n      amount: amount, \n      price: cost\n    }\n    this.setState({\n      ordenes:[...this.state.ordenes,orderMenu]\n    })\n  }\n\n  componentDidMount() {\n    const MenuRef = firebase.database().ref(\"Menu\"); //este llama los datos de FB\n    MenuRef.on(\"value\", snapshot => {\n      let menus1 = snapshot.val();\n      let newStateMenu = [];\n      for (let menu2 in menus1) {\n        newStateMenu.push({\n          id: menu2,\n          image: menus1[menu2].image,\n          item: menus1[menu2].item,\n          speciality: menus1[menu2].speciality,\n          amount: menus1[menu2].amount,\n          price: menus1[menu2].price\n        });\n      }\n      this.setState({\n        menu: newStateMenu //aqui es donde se guarda en el estado lo que FB manda\n      });\n    });\n  }\n\n  //suma los items en la comanda\n  sumTotalOrder () {\n        const priceArray = this.state.ordenes.map((el) => el.price)\n        const items = priceArray.reduce((sum,result)=>{\n            return sum + result;\n        });\n        this.setState({\n            total: items\n        });\n    };\n\n\n// //borra item en la comanda\n  deleteLine(e, menu) {\n            e.preventDefault(e)\n            this.setState(prevState => ({\n                ordenes: prevState.ordenes.filter(element => element != menu )\n            }));\n          }\n\n\n  render() {\n    return (\n        <div class=\"container\">\n          <div class=\"row\">\n\n        <div className=\"col-md-6\">\n          {this.state.menu.map((menuDetail, i) => ( //en map va el nombre del import de json\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <img src={menuDetail.image} className=\"card-img-top\" alt=\"\" />\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{menuDetail.item}</h5>\n                  <p className=\"card-text\" />\n                  <ul>\n                    {menuDetail.amount.map((quantity, index) => (\n                      <div>\n        \n                          <button className=\"btn btn-primary btn-lg col-md-12\" onClick={()=> {\n                this.submit(menuDetail.item, menuDetail.amount[index], menuDetail.price[index])}} \n                type=\"submit\">\n                            {\" \"}\n                            {quantity + \" \" + \"$\" + menuDetail.price[index]}\n\n                          </button>\n                       \n                      </div>\n                    ))}\n                  </ul>\n\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n              <div class=\"col\">\n                <Order menuOrder={this.state.ordenes} handleDelete={this.deleteLine} />\n                <button className=\"btn btn-primary\" onClick={this.sumTotalOrder}> Total: $ {this.state.total} </button> \n              </div>\n          </div>\n            \n        </div>\n                \n       \n    );\n  }\n}\n\nexport default ShowMenuWithFb;\n","import React from \"react\";\n\nexport class OrderCombos extends React.Component {\n\n    deleteItem = (e, i) => {\n        this.props.handleDelete(e, i)\n    }\n\n    render(){\n        console.log(this.props.menuOrder)\n        const orders = this.props.menuOrder.map((combo, i) => {\n            return(\n                <div>\n                    <ul key={i} className=\"list-group col-md-12\">\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center col-md-12\">\n                            <p> {combo.item}</p>\n                            <span className=\"btn btn-success\">{\"$\"+ combo.price}</span>\n                            <button id={i} onClick={(event)=> this.deleteItem(event, combo)}><i className=\" btn btn-danger fas fa-trash-alt\"></i></button>\n                        </li>\n                    </ul>\n                </div>\n            )\n        })\n        return(\n            orders\n        )\n    }\n}\n\nexport default OrderCombos;","import React, { Component } from \"react\";\nimport firebase from \"../Firebase/initializeFirebase\";\n// import Paquetes from '../data/paquetes.json';\n// import Counter from \"../components/counter\";\nimport OrderCombos from \"../components/orderCombos\";\n\nclass ShowMenuWithFb extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmenu: [],\n\t\t\tpaquetes: [],\n\t\t\tordenes: [],\n\t\t\ttotal: 0\n\t\t};\n\n\t\tthis.submit = this.submit.bind(this);\n    \tthis.deleteLine = this.deleteLine.bind(this);\n    \tthis.sumTotalOrder = this.sumTotalOrder.bind(this)\n\t}\n\n\tsubmit(item,cost){\n\t\tconst orderMenu = {\n\t\t\titem:item,\n\t\t\tprice: cost\n\t\t}\n\t\tthis.setState({\n\t\t\tordenes:[...this.state.ordenes, orderMenu]\n\t\t})\n\t}\n\n\tcomponentDidMount() {\n\t\tconst MenuRef = firebase.database().ref(\"Paquetes\");\n\t\tMenuRef.on(\"value\", snapshot => {\n\t\t\tlet menus1 = snapshot.val();\n\t\t\tlet newStateMenu = [];\n\t\t\tfor (let menu2 in menus1) {\n\t\t\t\tnewStateMenu.push({\n\t\t\t\t\tid: menu2,\n\t\t\t\t\timage: menus1[menu2].image,\n\t\t\t\t\titem: menus1[menu2].item,\n\t\t\t\t\tprice: menus1[menu2].price\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tpaquetes: newStateMenu //aqui es donde se guarda en el estado lo que FB manda\n\t\t\t});\n\t\t});\n\t}\n\n\n\t//suma los items en la comanda\n  sumTotalOrder () {\n        const priceArray = this.state.ordenes.map((el) => el.price)\n        const items = priceArray.reduce((sum,result)=>{\n            return sum + result;\n        });\n        this.setState({\n            total: items\n        });\n    };\n\n\n// //borra item en la comanda\n  deleteLine(e, menu) {\n            e.preventDefault(e)\n            this.setState(prevState => ({\n                ordenes: prevState.ordenes.filter(element => element != menu )\n            }));\n          }\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-sm-6\">\n\t\t\t\t\t{this.state.paquetes.map((combosDetail,index ) => ( //en map va el nombre del json\n\t\t\t\n\t\t\t\t\t\t<div className=\"card\" key={index}>\n\t\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={combosDetail.image}\n\t\t\t\t\t\t\t\t\tclassName=\"card-img-top\"\n\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button className=\"btn btn-primary btn-lg col-md-12\" onClick={() => {\n\t\t\t\t\t\t\t\t\tthis.submit(combosDetail.item, combosDetail.price);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} type=\"submit\">\n\n\t\t\t\t\t\t\t\t\t<h5 className=\"card-title\">\n\t\t\t\t\t\t\t\t\t\t{combosDetail.item}\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t\t\t\t\t\t {\"$\" +combosDetail.price}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"col\">\n                \t\t<OrderCombos menuOrder={this.state.ordenes} handleDelete={this.deleteLine} />\n                \t\t<button className=\"btn btn-primary\" onClick={this.sumTotalOrder}> Total: $ {this.state.total} </button> \n              \t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ShowMenuWithFb;\n","import React from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport './css/style.css';\nimport Navbar from './components/navbar';\nimport Home from './components/home';\nimport ShowMenu from './components/menu';\nimport ShowCombos from './components/combos';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar name=\"Mariscos Selectos Perico\" /> \n        {/* <Route to=\"/\" component={Home}/>*/}\n        <Route exact path=\"/\" render={() => <Home title=\"Platillos\" />} />\n        <Route path=\"/menu\" component={ShowMenu} /> \n       <Route path=\"/combos\" render={() => <ShowCombos />} />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}